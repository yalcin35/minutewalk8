{"version":3,"file":"5.BAVDbpzp.js","sources":["../../../../../../src/routes/audit/detail/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { fade, slide } from 'svelte/transition';\n  import { goto } from '$app/navigation';\n  import { ArrowLeft, ClipboardCheck, Map, Building2, User, Calendar, Star, CircleCheck as CheckCircle, Circle as XCircle, Image, MessageSquare, Brain, TriangleAlert as AlertTriangle, ChevronDown, ChevronUp } from 'lucide-svelte';\n  import { questions } from '$lib/data/questions';\n  import { hseQuestions } from '$lib/data/hse-questions';\n  import { mheQuestions } from '$lib/data/mhe-questions';\n  import { gembaQuestions } from '$lib/data/gemba-questions';\n  import { _ } from 'svelte-i18n';\n\n  let loading = true;\n  let error: string | null = null;\n  let auditData: any = null;\n  let expandedQuestions: Record<string, boolean> = {};\n  let questionMap: Record<number, string> = {};\n\n  onMount(() => {\n    try {\n      const storedData = localStorage.getItem('currentAuditData');\n      if (!storedData) {\n        error = 'No audit data found';\n        return;\n      }\n\n      auditData = JSON.parse(storedData);\n      \n      // Create a mapping of question IDs to question text based on audit type\n      if (auditData.audit_type) {\n        let questionList = [];\n        switch (auditData.audit_type.toLowerCase()) {\n          case 'hse':\n            questionList = hseQuestions;\n            break;\n          case 'mhe':\n            questionList = mheQuestions;\n            break;\n          case 'gemba':\n            questionList = gembaQuestions;\n            break;\n          default:\n            questionList = questions; // Default to 5S questions\n        }\n        \n        // Create a map of question IDs to question text\n        questionMap = questionList.reduce((map, q) => {\n          map[q.id] = q.text;\n          return map;\n        }, {});\n      }\n      \n      // Initialize expanded state for questions\n      if (auditData.data?.answers) {\n        auditData.data.answers.forEach((answer: any) => {\n          expandedQuestions[answer.questionId] = false;\n        });\n      }\n    } catch (e) {\n      console.error('Error loading audit data:', e);\n      error = e instanceof Error ? e.message : 'Failed to load audit data';\n    } finally {\n      loading = false;\n    }\n  });\n\n  function formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  function getScoreColor(score: number): string {\n    if (score >= 4) return 'text-green-500';\n    if (score >= 3) return 'text-yellow-500';\n    return 'text-red-500';\n  }\n\n  function toggleQuestionExpand(questionId: string) {\n    expandedQuestions[questionId] = !expandedQuestions[questionId];\n  }\n</script>\n\n<div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 py-12 px-6\">\n  <div class=\"max-w-4xl mx-auto space-y-8\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between\">\n      <div class=\"flex items-center space-x-3\">\n        <button\n          class=\"text-gray-600 hover:text-gray-900 transition-colors\"\n          on:click={() => goto('/history')}\n        >\n          <ArrowLeft class=\"w-5 h-5\" />\n        </button>\n        \n        <div class=\"flex items-center space-x-3\">\n          <div class=\"w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center\">\n            <ClipboardCheck class=\"w-6 h-6 text-blue-600\" />\n          </div>\n          <div>\n            <h1 class=\"text-2xl font-light text-gray-900\">\n              {auditData?.audit_type?.toUpperCase()} Audit Details\n            </h1>\n            <p class=\"text-gray-500\">\n              {auditData ? formatDate(auditData.created_at) : 'Loading...'}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    {#if loading}\n      <div class=\"flex justify-center py-12\">\n        <div class=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-blue-500\"></div>\n      </div>\n    {:else if error}\n      <div class=\"bg-red-50 text-red-600 rounded-xl p-6 space-y-4\">\n        <h3 class=\"font-medium text-lg\">Error Loading Audit Data</h3>\n        <p>{error}</p>\n        <button\n          class=\"px-4 py-2 bg-red-100 text-red-600 rounded-lg hover:bg-red-200 transition-colors\"\n          on:click={() => goto('/history')}\n        >\n          Return to History\n        </button>\n      </div>\n    {:else if auditData}\n      <!-- Summary Card -->\n      <div class=\"bg-white rounded-xl shadow-lg p-6 space-y-6\">\n        <div class=\"flex items-center justify-between\">\n          <h2 class=\"text-xl font-medium text-gray-900\">Audit Summary</h2>\n          <div class=\"flex items-center space-x-2\">\n            <Star class={`w-6 h-6 ${getScoreColor(auditData.data.score || 0)}`} />\n            <span class={`text-2xl font-light ${getScoreColor(auditData.data.score || 0)}`}>\n              {auditData.data.score ? auditData.data.score.toFixed(1) : 'N/A'}\n            </span>\n          </div>\n        </div>\n\n        <!-- Location & User -->\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div class=\"space-y-3\">\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <Map class=\"w-5 h-5 text-gray-500\" />\n              <span>Site: {auditData.site_name}</span>\n            </div>\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <Building2 class=\"w-5 h-5 text-gray-500\" />\n              <span>Department: {auditData.department_name}</span>\n            </div>\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <ClipboardCheck class=\"w-5 h-5 text-gray-500\" />\n              <span>Audit Type: {auditData.audit_type.toUpperCase()}</span>\n            </div>\n          </div>\n\n          <div class=\"space-y-3\">\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <User class=\"w-5 h-5 text-gray-500\" />\n              <span>Conducted By: {auditData.full_name || auditData.email}</span>\n            </div>\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <Calendar class=\"w-5 h-5 text-gray-500\" />\n              <span>Date: {formatDate(auditData.created_at)}</span>\n            </div>\n            <div class=\"flex items-center space-x-2 text-gray-700\">\n              <AlertTriangle class=\"w-5 h-5 text-gray-500\" />\n              <span>Critical Issues: {auditData.data.critical_issues || 0}</span>\n            </div>\n          </div>\n        </div>\n\n        {#if auditData.data.duration_seconds}\n          <div class=\"bg-blue-50 p-4 rounded-lg\">\n            <p class=\"text-blue-700\">\n              Audit Duration: {Math.floor(auditData.data.duration_seconds / 60)} min {auditData.data.duration_seconds % 60} sec\n            </p>\n          </div>\n        {/if}\n      </div>\n\n      <!-- Questions and Answers -->\n      <div class=\"space-y-4\">\n        <h2 class=\"text-xl font-medium text-gray-900\">Audit Questions & Responses</h2>\n        \n        {#if auditData.data.answers && auditData.data.answers.length > 0}\n          <div class=\"space-y-4\">\n            {#each auditData.data.answers as answer}\n              <div class=\"bg-white rounded-xl shadow-lg overflow-hidden\">\n                <div class=\"p-6 border-b border-gray-100\">\n                  <div class=\"flex items-start justify-between\">\n                    <h3 class=\"text-lg font-medium text-gray-900\">\n                      {answer.questionId}. {questionMap[answer.questionId] || answer.question || 'Question not found'}\n                    </h3>\n                    <div class=\"flex items-center space-x-2\">\n                      <Star class={`w-5 h-5 ${getScoreColor(answer.rating)}`} />\n                      <span class={`text-xl font-light ${getScoreColor(answer.rating)}`}>\n                        {answer.rating}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <button \n                    class=\"mt-4 flex items-center space-x-2 text-blue-600 hover:text-blue-800\"\n                    on:click={() => toggleQuestionExpand(answer.questionId)}\n                  >\n                    <span>\n                      {expandedQuestions[answer.questionId] ? 'Hide Details' : 'Show Details'}\n                    </span>\n                    <svelte:component \n                      this={expandedQuestions[answer.questionId] ? ChevronUp : ChevronDown} \n                      class=\"w-4 h-4\" \n                    />\n                  </button>\n                </div>\n                \n                {#if expandedQuestions[answer.questionId]}\n                  <div transition:slide={{ duration: 200 }} class=\"p-6 space-y-6 bg-gray-50\">\n                    <!-- Photos -->\n                    {#if answer.photos && answer.photos.length > 0}\n                      <div class=\"space-y-2\">\n                        <h4 class=\"flex items-center space-x-2 text-sm font-medium text-gray-700\">\n                          <Image class=\"w-4 h-4\" />\n                          <span>Evidence Photos</span>\n                        </h4>\n                        <div class=\"grid grid-cols-2 sm:grid-cols-3 gap-2\">\n                          {#each answer.photos as photo}\n                            <a \n                              href={photo} \n                              target=\"_blank\" \n                              rel=\"noopener noreferrer\"\n                              class=\"aspect-square rounded-lg overflow-hidden bg-gray-100 relative hover:opacity-90 transition-opacity\"\n                            >\n                              <img\n                                src={photo}\n                                alt=\"Audit evidence\"\n                                class=\"w-full h-full object-cover\"\n                              />\n                            </a>\n                          {/each}\n                        </div>\n                      </div>\n                    {/if}\n\n                    <!-- Notes -->\n                    {#if answer.notes}\n                      <div class=\"space-y-2\">\n                        <h4 class=\"flex items-center space-x-2 text-sm font-medium text-gray-700\">\n                          <MessageSquare class=\"w-4 h-4\" />\n                          <span>Notes</span>\n                        </h4>\n                        <p class=\"text-gray-700 bg-white p-4 rounded-lg\">\n                          {answer.notes}\n                        </p>\n                      </div>\n                    {/if}\n\n                    <!-- AI Insights -->\n                    {#if answer.aiInsight}\n                      <div class=\"space-y-4 bg-purple-50 p-4 rounded-lg\">\n                        <h4 class=\"flex items-center space-x-2 text-sm font-medium text-gray-700\">\n                          <Brain class=\"w-4 h-4 text-purple-600\" />\n                          <span>AI Analysis</span>\n                        </h4>\n                        \n                        <div class=\"space-y-3\">\n                          <div>\n                            <h5 class=\"text-sm font-medium text-gray-700\">Observation</h5>\n                            <p class=\"text-gray-700\">{answer.aiInsight.observation}</p>\n                          </div>\n                          \n                          <div>\n                            <h5 class=\"text-sm font-medium text-gray-700\">Analysis</h5>\n                            <p class=\"text-gray-700\">{answer.aiInsight.analysis}</p>\n                          </div>\n                          \n                          {#if answer.aiInsight.recommendations && answer.aiInsight.recommendations.length > 0}\n                            <div>\n                              <h5 class=\"text-sm font-medium text-gray-700\">Recommendations</h5>\n                              <ul class=\"space-y-2 mt-2\">\n                                {#each answer.aiInsight.recommendations as rec}\n                                  <li class=\"bg-white p-3 rounded-lg\">\n                                    <p class=\"text-gray-700\">{rec.text}</p>\n                                    <div class=\"flex items-center space-x-3 mt-2 text-sm\">\n                                      <span class=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium\n                                        {rec.priority === 'High' ? 'bg-red-100 text-red-800' :\n                                        rec.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                                        'bg-green-100 text-green-800'}\">\n                                        {rec.priority}\n                                      </span>\n                                      <span class=\"text-gray-500\">Impact: {rec.impact}</span>\n                                    </div>\n                                  </li>\n                                {/each}\n                              </ul>\n                            </div>\n                          {/if}\n                          \n                          {#if answer.aiInsight.followUp && answer.aiInsight.followUp.length > 0}\n                            <div>\n                              <h5 class=\"text-sm font-medium text-gray-700\">Follow-up Questions</h5>\n                              <ul class=\"list-disc list-inside mt-2\">\n                                {#each answer.aiInsight.followUp as question}\n                                  <li class=\"text-gray-700\">{question}</li>\n                                {/each}\n                              </ul>\n                            </div>\n                          {/if}\n                        </div>\n                      </div>\n                    {/if}\n                  </div>\n                {/if}\n              </div>\n            {/each}\n          </div>\n        {:else}\n          <div class=\"bg-white rounded-xl shadow-lg p-6 text-center\">\n            <p class=\"text-gray-500\">No questions or responses found for this audit.</p>\n          </div>\n        {/if}\n      </div>\n      \n      <!-- Actions -->\n      <div class=\"flex justify-center pt-4\">\n        <button\n          class=\"px-6 py-3 bg-blue-500 text-white rounded-xl hover:bg-blue-600 transition-colors\"\n          on:click={() => goto('/history')}\n        >\n          Back to History\n        </button>\n      </div>\n    {/if}\n  </div>\n</div>"],"names":["$.mutable_source","$.get","$.set","$.event","$.derived_safe_equal","$.set_text","$.each","$.component","ChevronUp","ChevronDown","$$anchor","$.index","$.template_effect","$.transition"],"mappings":"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"}