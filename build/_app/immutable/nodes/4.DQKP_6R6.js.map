{"version":3,"file":"4.DQKP_6R6.js","sources":["../../../../../../src/routes/audit/+page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { fly } from 'svelte/transition';\n  import { spring } from 'svelte/motion';\n  import { ChevronRight, ChevronLeft, Save, Brain, RefreshCw } from 'lucide-svelte';\n  import { questions } from '$lib/data/questions';\n  import PhotoUpload from '$lib/components/PhotoUpload.svelte';\n  import PhotoDisplay from '$lib/components/PhotoDisplay.svelte';\n  import AIInsights from '$lib/components/AIInsights.svelte';\n  import { getAIInsights } from '$lib/services/ai';\n  import { supabase } from '$lib/supabase';\n  import { goto } from '$app/navigation';\n  import type { AIInsight } from '$lib/types/ai';\n  import { onMount } from 'svelte';\n  import { browser } from '$app/environment';\n  import { _ } from 'svelte-i18n';\n\n  interface Photo {\n    id: string;\n    file: File;\n    thumbnail: string;\n  }\n\n  interface Answer {\n    rating: number;\n    photos: Photo[];\n    notes: string;\n    aiInsight?: AIInsight | null;\n  }\n\n  let currentQuestionIndex = 0;\n  let progress = spring(0);\n  let answers: Record<number, Answer> = {};\n  let aiLoading = false;\n  let aiError: string | null = null;\n  let saving = false;\n  let saveError: string | null = null;\n  \n  $: currentQuestion = questions[currentQuestionIndex];\n  $: currentAnswer = answers[currentQuestion.id] || { rating: 0, photos: [], notes: '', aiInsight: null };\n  $: progress.set((currentQuestionIndex / (questions.length - 1)) * 100);\n\n  // Handle browser history state\n  onMount(() => {\n    if (browser) {\n      window.addEventListener('popstate', handlePopState);\n      \n      // Save initial state\n      const state = {\n        questionIndex: currentQuestionIndex,\n        answers\n      };\n      history.replaceState(state, '', window.location.href);\n    }\n\n    return () => {\n      if (browser) {\n        window.removeEventListener('popstate', handlePopState);\n      }\n    };\n  });\n\n  function handlePopState(event: PopStateEvent) {\n    if (event.state) {\n      currentQuestionIndex = event.state.questionIndex;\n      answers = event.state.answers;\n    }\n  }\n\n  function updateHistory() {\n    if (browser) {\n      const state = {\n        questionIndex: currentQuestionIndex,\n        answers\n      };\n      history.pushState(state, '', window.location.href);\n    }\n  }\n\n  async function requestAIInsights() {\n    if (currentAnswer.rating === 0 || !currentAnswer.notes) {\n      aiError = 'Please provide a rating and notes before requesting AI insights';\n      return;\n    }\n\n    aiLoading = true;\n    aiError = null;\n\n    try {\n      const insight = await getAIInsights(\n        currentQuestion.text,\n        currentAnswer.rating,\n        currentAnswer.notes,\n        currentAnswer.photos.map(p => p.file)\n      );\n\n      answers[currentQuestion.id] = { ...currentAnswer, aiInsight: insight };\n      updateHistory();\n    } catch (error) {\n      aiError = 'Failed to get AI insights. Please try again.';\n    } finally {\n      aiLoading = false;\n    }\n  }\n\n  function handleRating(value: number) {\n    answers[currentQuestion.id] = { ...currentAnswer, rating: value };\n    if ('vibrate' in navigator) navigator.vibrate(15);\n    updateHistory();\n  }\n\n  function handlePhotos(event: CustomEvent<{ photos: Photo[] }>) {\n    answers[currentQuestion.id] = { ...currentAnswer, photos: event.detail.photos };\n    updateHistory();\n  }\n\n  function handlePhotoError(event: CustomEvent<{ message: string }>) {\n    console.error(event.detail.message);\n  }\n\n  function handleNotes(event: Event) {\n    const notes = (event.target as HTMLTextAreaElement).value;\n    answers[currentQuestion.id] = { ...currentAnswer, notes };\n    updateHistory();\n  }\n\n  function removePhoto(id: string) {\n    const updatedPhotos = currentAnswer.photos.filter(p => p.id !== id);\n    answers[currentQuestion.id] = { ...currentAnswer, photos: updatedPhotos };\n    updateHistory();\n  }\n\n  function navigate(direction: 'prev' | 'next') {\n    if (direction === 'prev' && currentQuestionIndex > 0) {\n      currentQuestionIndex--;\n    } else if (direction === 'next' && currentQuestionIndex < questions.length - 1) {\n      currentQuestionIndex++;\n    }\n    if ('vibrate' in navigator) navigator.vibrate(15);\n    updateHistory();\n  }\n\n  async function uploadPhotos(photos: Photo[], questionId: number): Promise<string[]> {\n    const uploadPromises = photos.map(async (photo) => {\n      const fileExt = photo.file.name.split('.').pop();\n      const fileName = `${Date.now()}-${Math.random().toString(36).substring(2)}.${fileExt}`;\n      const filePath = `audit-photos/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from('public')\n        .upload(filePath, photo.file);\n\n      if (uploadError) throw uploadError;\n\n      const { data: { publicUrl } } = supabase.storage\n        .from('public')\n        .getPublicUrl(filePath);\n\n      return publicUrl;\n    });\n\n    return Promise.all(uploadPromises);\n  }\n\n  async function saveAudit() {\n    saving = true;\n    saveError = null;\n\n    try {\n      // Get user and company info\n      const { data: { user } } = await supabase.auth.getUser();\n      if (!user) throw new Error('User not authenticated');\n\n      const { data: profile } = await supabase\n        .from('profiles')\n        .select('company_id')\n        .eq('id', user.id)\n        .single();\n\n      if (!profile?.company_id) throw new Error('Company not found');\n\n      // Upload photos and prepare audit data\n      const auditData = await Promise.all(\n        Object.entries(answers).map(async ([questionId, answer]) => {\n          const photoUrls = await uploadPhotos(answer.photos, parseInt(questionId));\n          \n          return {\n            questionId: parseInt(questionId),\n            rating: answer.rating,\n            notes: answer.notes,\n            photos: photoUrls,\n            aiInsight: answer.aiInsight\n          };\n        })\n      );\n\n      // Save audit to database\n      const { error: saveError } = await supabase\n        .from('audits')\n        .insert({\n          user_id: user.id,\n          company_id: profile.company_id,\n          data: {\n            version: 1,\n            timestamp: new Date().toISOString(),\n            answers: auditData\n          }\n        });\n\n      if (saveError) throw saveError;\n\n      // Redirect to dashboard on success\n      goto('/dashboard');\n    } catch (error) {\n      console.error('Failed to save audit:', error);\n      saveError = error instanceof Error ? error.message : 'Failed to save audit';\n      saving = false;\n    }\n  }\n</script>\n\n<div class=\"min-h-screen bg-gradient-to-br from-blue-50 to-white\">\n  <!-- Progress Bar -->\n  <div class=\"fixed top-0 left-0 w-full h-1 bg-gray-100\">\n    <div \n      class=\"h-full bg-blue-500 transition-all duration-300 ease-out\"\n      style=\"width: {$progress}%\"\n    ></div>\n  </div>\n\n  <!-- Category Header -->\n  <div class=\"bg-white shadow-sm\">\n    <div class=\"max-w-4xl mx-auto px-6 py-4\">\n      <h1 class=\"text-sm font-medium text-blue-600\">\n        {currentQuestion.category}\n      </h1>\n      <p class=\"text-gray-500 text-sm mt-1\">\n        Question {currentQuestionIndex + 1} of {questions.length}\n      </p>\n    </div>\n  </div>\n\n  <!-- Main Content Area -->\n  <div class=\"max-w-4xl mx-auto p-6 space-y-8\">\n    <div \n      in:fly={{ y: 20, duration: 300 }}\n      out:fly={{ y: -20, duration: 300 }}\n      class=\"space-y-8\"\n    >\n      <!-- Question -->\n      <div class=\"bg-white rounded-2xl shadow-lg p-6 space-y-6\">\n        <h2 class=\"text-xl font-light text-gray-900\">\n          {currentQuestion.text}\n        </h2>\n        \n        <!-- Rating -->\n        <div class=\"flex justify-between items-center py-4\">\n          {#each Array(5) as _, i}\n            <button\n              class=\"w-14 h-14 rounded-xl transition-all duration-200\n                     hover:bg-blue-50 focus:outline-none focus:ring-2\n                     focus:ring-blue-500 focus:ring-offset-2 relative\n                     {currentAnswer.rating === i + 1 ? 'bg-blue-500 text-white shadow-lg' : 'bg-white shadow-md'}\"\n              on:click={() => handleRating(i + 1)}\n            >\n              <span class=\"text-lg font-medium\">\n                {i + 1}\n              </span>\n              {#if currentAnswer.rating === i + 1}\n                <div class=\"absolute -top-2 -right-2 w-4 h-4 bg-green-500 rounded-full\"></div>\n              {/if}\n            </button>\n          {/each}\n        </div>\n\n        <!-- Photo Upload and Display -->\n        <div class=\"space-y-2\">\n          <label for=\"evidence-photos\" class=\"text-sm font-medium text-gray-700\">Evidence Photos</label>\n          <PhotoUpload\n            id=\"evidence-photos\"\n            photos={currentAnswer.photos}\n            on:change={handlePhotos}\n            on:error={handlePhotoError}\n          />\n          <PhotoDisplay\n            photos={currentAnswer.photos}\n            onRemove={removePhoto}\n          />\n        </div>\n\n        <!-- Notes -->\n        <div class=\"space-y-2\">\n          <label for=\"observation-notes\" class=\"text-sm font-medium text-gray-700\">Notes</label>\n          <textarea\n            id=\"observation-notes\"\n            value={currentAnswer.notes}\n            on:input={handleNotes}\n            class=\"w-full p-4 h-24 rounded-xl bg-gray-50\n                   border-none text-gray-700 placeholder-gray-400\n                   focus:ring-2 focus:ring-blue-500 focus:outline-none\n                   resize-none\"\n            placeholder=\"Add your observations...\"\n          ></textarea>\n        </div>\n\n        <!-- AI Review Button -->\n        <div class=\"flex space-x-4\">\n          {#if !currentAnswer.aiInsight}\n            <button\n              class=\"flex items-center space-x-2 px-4 py-2 bg-purple-50 \n                     text-purple-600 rounded-lg hover:bg-purple-100 \n                     transition-colors disabled:opacity-50 \n                     disabled:cursor-not-allowed\"\n              on:click={requestAIInsights}\n              disabled={aiLoading || !currentAnswer.rating || !currentAnswer.notes}\n            >\n              <Brain class=\"w-5 h-5\" />\n              <span>Get AI Review</span>\n            </button>\n          {:else}\n            <button\n              class=\"flex items-center space-x-2 px-4 py-2 bg-purple-50 \n                     text-purple-600 rounded-lg hover:bg-purple-100 \n                     transition-colors disabled:opacity-50 \n                     disabled:cursor-not-allowed\"\n              on:click={requestAIInsights}\n              disabled={aiLoading}\n            >\n              <RefreshCw class=\"w-5 h-5 {aiLoading ? 'animate-spin' : ''}\" />\n              <span>Refresh AI Review</span>\n            </button>\n          {/if}\n        </div>\n      </div>\n\n      <!-- AI Insights -->\n      {#if currentAnswer.rating > 0 && currentAnswer.notes && (aiLoading || currentAnswer.aiInsight || aiError)}\n        <AIInsights\n          insight={currentAnswer.aiInsight}\n          loading={aiLoading}\n          error={aiError}\n        />\n      {/if}\n\n      <!-- Save Error Message -->\n      {#if saveError}\n        <div \n          class=\"bg-red-50 text-red-600 p-4 rounded-lg flex items-start space-x-2\"\n          transition:fly={{ y: 10, duration: 300 }}\n        >\n          <span>{saveError}</span>\n        </div>\n      {/if}\n    </div>\n  </div>\n\n  <!-- Navigation Buttons -->\n  <div class=\"fixed bottom-8 right-8 flex space-x-4\">\n    {#if currentQuestionIndex > 0}\n      <button\n        class=\"w-12 h-12 rounded-xl bg-white text-blue-500 shadow-lg\n               flex items-center justify-center transform transition-all\n               duration-200 hover:scale-105 active:scale-95\n               focus:outline-none focus:ring-2 focus:ring-blue-500\n               focus:ring-offset-2\"\n        on:click={() => navigate('prev')}\n      >\n        <ChevronLeft class=\"w-6 h-6\" />\n      </button>\n    {/if}\n\n    {#if currentQuestionIndex === questions.length - 1}\n      <button\n        class=\"px-6 h-12 rounded-xl bg-green-500 text-white shadow-lg\n               flex items-center justify-center transform transition-all\n               duration-200 hover:scale-105 active:scale-95\n               focus:outline-none focus:ring-2 focus:ring-green-500\n               focus:ring-offset-2 space-x-2 disabled:opacity-50\n               disabled:cursor-not-allowed disabled:hover:scale-100\"\n        on:click={saveAudit}\n        disabled={saving}\n      >\n        {#if saving}\n          <div class=\"w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n          <span>Saving...</span>\n        {:else}\n          <Save class=\"w-5 h-5\" />\n          <span>Save Audit</span>\n        {/if}\n      </button>\n    {:else}\n      <button\n        class=\"w-12 h-12 rounded-xl bg-blue-500 text-white shadow-lg\n               flex items-center justify-center transform transition-all\n               duration-200 hover:scale-105 active:scale-95\n               focus:outline-none focus:ring-2 focus:ring-blue-500\n               focus:ring-offset-2\"\n        on:click={() => navigate('next')}\n      >\n        <ChevronRight class=\"w-6 h-6\" />\n      </button>\n    {/if}\n  </div>\n</div>"],"names":["$.mutable_source","$.get","event","$.set","$.mutate","$.update","saveError","$.index","$$anchor","$.template_effect","$.transition","$.event","$.set_text","$.set_value"],"mappings":"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"}